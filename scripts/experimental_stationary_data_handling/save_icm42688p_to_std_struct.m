% read file 

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: /media/jagatpreet/Data/datasets/imu_modeling_paper/allan_dev_data/icm20602_stationary_2.csv
%
% Auto-generated by MATLAB on 23-Mar-2023 15:52:58

%% file
clear all
clc;
folder = "/media/jagatpreet/Data/datasets/imu_modeling_paper/allan_dev_data/csv_format";
filename = fullfile(folder,'icm42688p_stationary_fsr_8g_1000dps_200hz.csv');

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 8);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = ",";

% Specify column names and types
opts.VariableNames = ["Index", "AccelXLSB", "AccelYLSB", "AccelZLSB", "GyroXLSB", "GyroYLSB", "GyroZLSB", "Var8"];
opts.SelectedVariableNames = ["Index", "AccelXLSB", "AccelYLSB", "AccelZLSB", "GyroXLSB", "GyroYLSB", "GyroZLSB"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "Var8", "WhitespaceRule", "preserve");
opts = setvaropts(opts, "Var8", "EmptyFieldRule", "auto");

% Import the data
raw_data = readtable(filename, opts);

%% Convert to output type
raw_data = table2array(raw_data);

%% Clear temporary variables
clear opts

% raw data without any removal of 
ICM42688p.raw_data = raw_data;
ICM42688p.fs = 200;

ICM42688p.full_scale_range = "acc: +/-8g, gyro: +/-1000 dps"
ICM42688p.ADC_bits = 16;
ICM42688p.acc_least_count = 2*8*9.81/2^16; % FSR / no. of bits
ICM42688p.gyro_least_count = deg2rad(2*1000/2^16); % FSR of gyro in dps
ICM42688p.acc_least_count_unit = "m/s^2";
ICM42688p.gyro_least_count_unit = "rad/s";
dt = (1/ICM42688p.fs);
ICM42688p.comment = strcat(num2str((length(raw_data)/ICM42688p.fs)/3600), 'hr', ...
                  " Low noise mode\n collected using DK42688p",...
                  "First half an hour samples will be scrapped", ...
                   " and last 10 minutes");

% scrap first 30 minutes.
num_samples_to_scrap_from_begining = 30 * 60 * ICM42688p.fs;
num_samples_to_scrap_from_end = 10*60*ICM42688p.fs;
raw_data = raw_data(num_samples_to_scrap_from_begining: end - num_samples_to_scrap_from_end , :);
ICM42688p.processed = zeros(size(raw_data));

ICM42688p.processed(:, 1) = (0:length(raw_data) - 1) *dt;


ICM42688p.processed(:, 2:4 ) = ...
    raw_data(:, 2:4) * ICM42688p.acc_least_count;

ICM42688p.processed(:, 5:7 ) = ...
    raw_data(:, 5:7) * ICM42688p.gyro_least_count;

% std struct for data processing
ICM42688p.Data.time = ICM42688p.processed(:, 1);
ICM42688p.Data.acceleration_x = ICM42688p.processed(:,2);
ICM42688p.Data.acceleration_y = ICM42688p.processed(:,3);
ICM42688p.Data.acceleration_z = ICM42688p.processed(:,4);
ICM42688p.Data.angular_velocity_x = ICM42688p.processed(:,5);
ICM42688p.Data.angular_velocity_y = ICM42688p.processed(:,6);
ICM42688p.Data.angular_velocity_z = ICM42688p.processed(:,7);

% save
save(fullfile(folder,'icm42688p_200hz.mat'),'ICM42688p');